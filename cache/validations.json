{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:15",
        "version": {
          "withMetadata": "6fdff640728e9f58518d9462f2bf701b9e3e3b6c383c683c352f41ee87ec9531",
          "withoutMetadata": "11ca8f2735e4b52b077abe6ee0012ef9d3b20ad0eeb9875e3b19e85f737b5f0f",
          "linkedWithoutMetadata": "11ca8f2735e4b52b077abe6ee0012ef9d3b20ad0eeb9875e3b19e85f737b5f0f"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IOrderBook"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1764",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:20"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)4793",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:22"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:25"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:34"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:38"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:41"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:43"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:45"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:47"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:49"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)2186_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:51"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)2201_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:53"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1764": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4793": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)2186_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)2201_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)2186_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)2201_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "bcf87160bc3aa2bc6e59b41fa5f10d205c7189adf6b654a883565afcf28a9153",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)5234",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)5234": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "8f295a99acdf54be69e3b0926a899b0eb67e2f1572bb4a67a474e49e66d932a5",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)5082",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)5082": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "26729db5e5fd665f7ea904fe31b7240c7d14c52412d563cf891f1a2839e412e4",
          "withoutMetadata": "b7a3ce9e2622088c0492f1ba32499b9873fe6896e6517c247409cf1eeccd033b",
          "linkedWithoutMetadata": "b7a3ce9e2622088c0492f1ba32499b9873fe6896e6517c247409cf1eeccd033b"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address,bytes32)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5082",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4793",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5234",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5297_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5297_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5082": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5234": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4793": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5297_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOrderBook": {
        "src": "contracts/utils/IOrderBook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "8d15dec24a8f7c856b323c65222d7804d7c9f781584a4d22ce9b94dbd3bac2bd",
          "withoutMetadata": "896f8d088222ecebf632cb824c8be43c700378f79d3261097a681de3988aec6e",
          "linkedWithoutMetadata": "896f8d088222ecebf632cb824c8be43c700378f79d3261097a681de3988aec6e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1764",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)4812",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1764": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)2183_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)2198_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "bcf87160bc3aa2bc6e59b41fa5f10d205c7189adf6b654a883565afcf28a9153",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "8f295a99acdf54be69e3b0926a899b0eb67e2f1572bb4a67a474e49e66d932a5",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "260f32af7eb9893228e0819922e32094f5c3ff4e29c4be039c1bbddeca27c633",
          "withoutMetadata": "2dbb110391eaa24cf8ffb1659b596a17269be4dba06fe252e90343c3d4df19c0",
          "linkedWithoutMetadata": "2dbb110391eaa24cf8ffb1659b596a17269be4dba06fe252e90343c3d4df19c0"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5557_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5557_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5557_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "26729db5e5fd665f7ea904fe31b7240c7d14c52412d563cf891f1a2839e412e4",
          "withoutMetadata": "b7a3ce9e2622088c0492f1ba32499b9873fe6896e6517c247409cf1eeccd033b",
          "linkedWithoutMetadata": "b7a3ce9e2622088c0492f1ba32499b9873fe6896e6517c247409cf1eeccd033b"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address,bytes32)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5557_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5557_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5557_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "52aaf0be0e6e8e3cec4bdea33c9691a50d899a4dd84e03d1a5509e0245ab5eb1",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "592f2274dfaa782c04450c6eebb3ff8819f8849b3261655ef4ee051016e76ddc",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "f454a7989c2be0987107e94e3ca38890ab25af826bd69f6d287de9b8e7f6a9b1",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "a9ece40ede972709545a70c8ecb6d34c0e44ff1f9c468a65669c1c143a00223f",
          "withoutMetadata": "5ae07e1a6f6567efb374c7875bf85359a975ad8c860d9c97c8320ed259b27c70",
          "linkedWithoutMetadata": "5ae07e1a6f6567efb374c7875bf85359a975ad8c860d9c97c8320ed259b27c70"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4493_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4493_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4493_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "2f3dbaf6bb4cb8bcf98c2bedd3b7bdda9bc0164130bf5e25641eeab7eddb0af4",
          "withoutMetadata": "fcc0f0f939acd6100940c315b32a8ca2a6524aeb11c5f845f7029cb0139b3fe4",
          "linkedWithoutMetadata": "fcc0f0f939acd6100940c315b32a8ca2a6524aeb11c5f845f7029cb0139b3fe4"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4493_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4493_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4493_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DummyToken": {
        "src": "contracts/dummy/DummyToken.sol:6",
        "version": {
          "withMetadata": "5ac708cd076e50cbe8342efe5724ef06a7692008709e3fe20b47ec902f0b8834",
          "withoutMetadata": "78af9e0341b072aba3b29b0d124feff75fb4c0bc6cd485551d8a0a8e48f5bf85",
          "linkedWithoutMetadata": "78af9e0341b072aba3b29b0d124feff75fb4c0bc6cd485551d8a0a8e48f5bf85"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "5bd038716c9755f0774ff596c6ae20a89c524def19284dc2386b36f3f4225a49",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "6714b2dfd2088a5df89269f0ca0c682f806da8ea3327bbafbbbb33081747c726",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "47f38b50c09e0a2c04148ef67f8fa870bf8c0b72a297ecb92861c83b02c0cb4b",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "06a4e761e681204ff102d4d3e3f60f23519c8c8d920880dc2d2a593325ab1549",
          "withoutMetadata": "bb01a9c960109b29c049788b37623719562df079e738ea62fb24f4ac0e2d424e",
          "linkedWithoutMetadata": "bb01a9c960109b29c049788b37623719562df079e738ea62fb24f4ac0e2d424e"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "4d68b742dbf0d86ccd7dc25f3a28b8a47c734d19e232f4fad14a36d940f634ad",
          "withoutMetadata": "fcc0f0f939acd6100940c315b32a8ca2a6524aeb11c5f845f7029cb0139b3fe4",
          "linkedWithoutMetadata": "fcc0f0f939acd6100940c315b32a8ca2a6524aeb11c5f845f7029cb0139b3fe4"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "91ebbc1ec9d1b5660bafbe905ccdfb5b72e8b6c247a76ef7ec560233981d7465",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "b0f1a67e3fd4abd65c43b6b8d8ddbf7d9ec3d1670a3f4fdfa505e3ba01280b21",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "828d01d9dfef222fe0c2c1b8ec8c7b84a26499d063e1d90c4fe94392604b5485",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "5b1c7e92a54f1b039366525636287ebe36b5e4e4c1b2e223f7c237a141ca1891",
          "withoutMetadata": "a43e6a457dd482005dd9bc9c31d719afda886d186b9bdfc4603df7ab36bb4b63",
          "linkedWithoutMetadata": "a43e6a457dd482005dd9bc9c31d719afda886d186b9bdfc4603df7ab36bb4b63"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "4c84789418f9d22b2a7d74728ad32b35c8b054e6e1f00e7fbc837afd6c874148",
          "withoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef",
          "linkedWithoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "515bd8338a447cc7da950c488dd1bcb5e946b38c52656e56e23223d496a2a8dd",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "592b438932ac1cc0190869005e925f9c3effcf22d98e27bff17a6f8aff51344d",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "5393ca8b7b8daaf7de237d464a791d1749f2d7b54593a092fc6b145e9380014f",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "b96836802e0b685a7bcf489172bac0fd187bcb2e18b3581b81d48cf2472e221f",
          "withoutMetadata": "7c959f28d7093504330556121ae7df2b2afa575d73e1d3116a399ed635959f29",
          "linkedWithoutMetadata": "7c959f28d7093504330556121ae7df2b2afa575d73e1d3116a399ed635959f29"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "e4669eee9727fea99d96ac417c735f99f4e652c78740d8a530e8bd1d8c0ff2a9",
          "withoutMetadata": "8e32f653badbaa7b59e9c30ea1ae703afa01866663d65ce6cee10da7925a78c2",
          "linkedWithoutMetadata": "8e32f653badbaa7b59e9c30ea1ae703afa01866663d65ce6cee10da7925a78c2"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "91ebbc1ec9d1b5660bafbe905ccdfb5b72e8b6c247a76ef7ec560233981d7465",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "b0f1a67e3fd4abd65c43b6b8d8ddbf7d9ec3d1670a3f4fdfa505e3ba01280b21",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "828d01d9dfef222fe0c2c1b8ec8c7b84a26499d063e1d90c4fe94392604b5485",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "5b1c7e92a54f1b039366525636287ebe36b5e4e4c1b2e223f7c237a141ca1891",
          "withoutMetadata": "a43e6a457dd482005dd9bc9c31d719afda886d186b9bdfc4603df7ab36bb4b63",
          "linkedWithoutMetadata": "a43e6a457dd482005dd9bc9c31d719afda886d186b9bdfc4603df7ab36bb4b63"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "4c84789418f9d22b2a7d74728ad32b35c8b054e6e1f00e7fbc837afd6c874148",
          "withoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef",
          "linkedWithoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4494_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4494_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4494_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DummyToken": {
        "src": "contracts/dummy/DummyToken.sol:6",
        "version": {
          "withMetadata": "6836fb8020d09481e5581317bdb82f0730a37871e639fe2d9d345ff463d3433d",
          "withoutMetadata": "b933a273b4df275286e9d616cc5c1979265045d3fb554ea5289bf135a208d319",
          "linkedWithoutMetadata": "b933a273b4df275286e9d616cc5c1979265045d3fb554ea5289bf135a208d319"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "7da99071002efacec74e9e10859fbf4fa44c94d1ff714eb29050b6c06369c001",
          "withoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53",
          "linkedWithoutMetadata": "f5eac35b56b71236d0b2419df0f17f6541e6986936be0c74c4c2747911df1c53"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1718",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)3752",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1718": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1825_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1840_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1825_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1840_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:3",
        "version": {
          "withMetadata": "4142d9d0257e3b5d17d0036029d66aad62be80eacd8ad1b0e0f0265e089df33c",
          "withoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a",
          "linkedWithoutMetadata": "6c5f3fd3f44283c0fd7b9888fd70a8c215741ff3e3b08d9f62a10e9d2b80898a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256)",
          "getTWAP(uint256)",
          "setPrice(uint256)",
          "setPrice2(uint256)",
          "setTWAP(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:5"
            },
            {
              "label": "price2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:6"
            },
            {
              "label": "twap",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:7"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "270320d55d3d95f89bcc9e9f93ead42978fb3421ef2ac51cb199ee86046bd47a",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "569e0b173925232c4357c75e5052d121e2ab52b882a437dacc716ae30a3421b0",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "662a825f7e2802552b9612632b3c18741e31dfcef99bf29bf6fb6c675dbf4a7f",
          "withoutMetadata": "b0ac92ec92e9fe508554ebfa3dfbcbd805bd0093b627a988e22a8bc0122fc1a8",
          "linkedWithoutMetadata": "b0ac92ec92e9fe508554ebfa3dfbcbd805bd0093b627a988e22a8bc0122fc1a8"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4493_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4493_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4493_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "a2692f0555745d033fdc61b6f1b5c955b6a5c3791e49b158b4d6629b3232eff6",
          "withoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef",
          "linkedWithoutMetadata": "096f6bf2dbd8e42640f9d48f429eba9124aae4fd867446fb600f57131a3449ef"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)4041",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)3752",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)4193",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)4493_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)4493_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4041": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4193": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)3752": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)4493_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "021a3792c3e4f76a2976cfe34122e9942c33de3f31746a9d5edc81623ce87656",
          "withoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead",
          "linkedWithoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1764",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)4812",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1764": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)2183_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)2198_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "ad6d55785752b740572e1f5a4cb78e302fc0e84d2e1c55354f9167fff3a614d2",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "99deb122fd4a236946cbc3c7205102ca9e65ddeed58c362b5ed58be8548758d8",
          "withoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4",
          "linkedWithoutMetadata": "84fbadec569cff5fc0fd5785f8f07219da1de7380a133f5c464573e59c1715f4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "10699e6a3173c99e01eaaa5b26f52fca6b8f0e1de80ed16e00ad310e20eae4ad",
          "withoutMetadata": "ad6a50fd96a109ac144f97850f96412b1b797248c72ee9858aeef5f666546625",
          "linkedWithoutMetadata": "ad6a50fd96a109ac144f97850f96412b1b797248c72ee9858aeef5f666546625"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5557_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5557_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5557_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "7178a9c7dc6f96d5d9fb328cac4a5d3a42a8ef3b730529779a176461c75642f2",
          "withoutMetadata": "eb4ab3b017bcc02a612ab7c504d5b4692a646ae11c20d91d8f2383b4ea1fa503",
          "linkedWithoutMetadata": "eb4ab3b017bcc02a612ab7c504d5b4692a646ae11c20d91d8f2383b4ea1fa503"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5253",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5557_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5557_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5253": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5557_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "71a6fa4daf591ac78b976b7b5d71a8f5e962d27c16b385d7007df3590a3e9373",
          "withoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a",
          "linkedWithoutMetadata": "6d87d27a728b29a0b86bcd829133934cfcc30f3936ba4ee67f66ee7efef5aa5a"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "145aa5f1eabd9da4866112616cc346924a9bd226440d26a8526b0ddce5118128",
          "withoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead",
          "linkedWithoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1764",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)4812",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "122",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1764": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)2183_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)2198_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)2183_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)2198_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:12",
        "version": {
          "withMetadata": "ecab9ba619d6c40fa0b294119405a7dc5cca5d007aefa5d3534ad5b2ca6ee431",
          "withoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c",
          "linkedWithoutMetadata": "8e47b3d53b35282be0dd62b540359c24e2f6388e98ebfc2684d1dcab71b38d6c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:16"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpStatic)5242",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:18"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:20"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpStatic)5242": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:11",
        "version": {
          "withMetadata": "ba91ecc93ba996716999ba35ec2b0ed983ec1f2c0015a674a7e81c6b0bc4a8a3",
          "withoutMetadata": "810366681ffe5fbaeaf865b880fb318e1755f995b75d365449323ae54130fa72",
          "linkedWithoutMetadata": "810366681ffe5fbaeaf865b880fb318e1755f995b75d365449323ae54130fa72"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:13"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:15"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "102",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:9",
        "version": {
          "withMetadata": "e94a5c15b3da5879cb71342781e1c1f8cd71c730d06da586f6644b5aa8b91ca8",
          "withoutMetadata": "ad6a50fd96a109ac144f97850f96412b1b797248c72ee9858aeef5f666546625",
          "linkedWithoutMetadata": "ad6a50fd96a109ac144f97850f96412b1b797248c72ee9858aeef5f666546625"
        },
        "inherit": [
          "FxVaults",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5242",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5546_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5546_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5242": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5546_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:12",
        "version": {
          "withMetadata": "614ddaf6c391921099ab4317627827f4ad02b717a866a3cf707f77c88b2e9cb5",
          "withoutMetadata": "eb4ab3b017bcc02a612ab7c504d5b4692a646ae11c20d91d8f2383b4ea1fa503",
          "linkedWithoutMetadata": "eb4ab3b017bcc02a612ab7c504d5b4692a646ae11c20d91d8f2383b4ea1fa503"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:16"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:18"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:21"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:23"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:26"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:28"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:30"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:32"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(FxPerpDynamic)5101",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:34"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(RateOracle)4812",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:36"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FxPerpStatic)5242",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:38"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_struct(Vault)5546_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:40"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:42"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)50_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5546_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5101": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5242": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4812": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5546_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f61fdf07fa8a655edae49a0add83216fee033ac9fed78e7b5cb56799a1b9505a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol:12",
        "version": {
          "withMetadata": "1d318f8db266c7d04fb0170bf4d26a7ac6b7c763bd011253e8351e6a9aca467f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "61cc41ee361e2e7b494ca072bcf93a7e4ead00c9b4f8bd00f09076e919047e85",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:14",
        "version": {
          "withMetadata": "a2454a6c7899b9b38258e7ea958f24e59559495c00e6ce983bf993dbfc987705",
          "withoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead",
          "linkedWithoutMetadata": "c97da46513bcd2e8bc8031db59995625b647f11dc50edc4a2fa83dd854d72ead"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SignedSafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20)1714",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:19"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(RateOracle)4805",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:21"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:24"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:33"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:37"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:40"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:42"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:44"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:46"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "119",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:48"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)2180_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:50"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)2195_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1714": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4805": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)2180_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)2195_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)2180_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)2195_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:11",
        "version": {
          "withMetadata": "e62481b1fb98f5562bc43a27e09e22a897bf0cde88f59aacc2e97a81664386ac",
          "withoutMetadata": "945213c41a6f7e37539d4211172e6446191a5b6aec6135e507ef238f0ad7cfc3",
          "linkedWithoutMetadata": "945213c41a6f7e37539d4211172e6446191a5b6aec6135e507ef238f0ad7cfc3"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxPerpDynamic",
            "src": "contracts/Vaults/FxPerpDynamic.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:15"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(FxPerpStatic)5222",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:17"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:19"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5222": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:10",
        "version": {
          "withMetadata": "b097f67b144639f1e84ab43a40e893c5162a8a8573ddc1dc66e7397ed0f7ce66",
          "withoutMetadata": "c9c0a81670b73f603878b907b7946674ee1932d5923151bb1ea5f7cabdf32456",
          "linkedWithoutMetadata": "c9c0a81670b73f603878b907b7946674ee1932d5923151bb1ea5f7cabdf32456"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxPerpStatic",
            "src": "contracts/Vaults/FxPerpStatic.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:12"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(FxPerpDynamic)5082",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:14"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)5082": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:8",
        "version": {
          "withMetadata": "35b99d4e669e5517ccd85d58cfa4533be705539fabfef7f2c51bb0861386f27c",
          "withoutMetadata": "105b5c1895feda65e42c88f2b0857749c2b28cab21e6a4fdfa6fea47333b5dc5",
          "linkedWithoutMetadata": "105b5c1895feda65e42c88f2b0857749c2b28cab21e6a4fdfa6fea47333b5dc5"
        },
        "inherit": [
          "FxVaults"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address[],bytes32[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxUSDVaults",
            "src": "contracts/Vaults/FxUSDVaults.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:15"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:17"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:19"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:22"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:24"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:27"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:29"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "8",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:31"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(FxPerpDynamic)5082",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:33"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(RateOracle)4805",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:35"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(FxPerpStatic)5222",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:37"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_struct(Vault)5514_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:39"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5514_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5082": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5222": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4805": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5514_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:11",
        "version": {
          "withMetadata": "0d41921f4ca2c415806711a8360740eae5d645c1fa98982bc6c7d570d533b065",
          "withoutMetadata": "05301c204f40a1d99485e442bd63627a44dd0c1fde2f3cb0ca3b80b7d6c0e2c5",
          "linkedWithoutMetadata": "05301c204f40a1d99485e442bd63627a44dd0c1fde2f3cb0ca3b80b7d6c0e2c5"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxVaults",
            "src": "contracts/Vaults/FxVaults.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:15"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:17"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:19"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:22"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:24"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:27"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:29"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "8",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:31"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(FxPerpDynamic)5082",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:33"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(RateOracle)4805",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:35"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(FxPerpStatic)5222",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:37"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_struct(Vault)5514_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:39"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5514_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)5082": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)5222": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4805": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5514_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2a55fb9c1b32105503a34d2a190ef648f49de000ef36db7b06ad5f1fcb3581b6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "61cc41ee361e2e7b494ca072bcf93a7e4ead00c9b4f8bd00f09076e919047e85",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignedSafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol:12",
        "version": {
          "withMetadata": "78b67ce353707bd30b7b4cb4f2f7911a24d318179e5331fbab0f868757fd39aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OrderBook": {
        "src": "contracts/OrderBook/OrderBook.sol:13",
        "version": {
          "withMetadata": "1b33dc091b5ff460d5ff9664d9edb2fe227aed99c18236cfacc4e9233a61b8ce",
          "withoutMetadata": "8a1970285b6eff6eb6f9f68120a3b4092c02c622d4683533a493edc433da675a",
          "linkedWithoutMetadata": "8a1970285b6eff6eb6f9f68120a3b4092c02c622d4683533a493edc433da675a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SignedSafeMath"
        ],
        "methods": [
          "(address[],address[],bytes32[],address,address)",
          "limitBuy(uint256,uint256,uint256,uint256)",
          "limitSell(uint256,uint256,uint256,uint256)",
          "marketSell(uint256,uint256,uint256)",
          "marketBuy(uint256,uint256,uint256)",
          "deleteBuy(uint256)",
          "deleteSell(uint256)",
          "getBuy(uint256)",
          "getSell(uint256)",
          "getBuyHead(uint256)",
          "getSellHead(uint256)",
          "getOpenBuyOrders(uint256)",
          "getOpenSellOrders(uint256)",
          "addFxPerpetual(address,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrderBook",
            "src": "contracts/OrderBook/OrderBook.sol:73"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "USD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1241",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:18"
            },
            {
              "label": "Oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RateOracle)4386",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:20"
            },
            {
              "label": "FxPerpetuals",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:22"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:23"
            },
            {
              "label": "buyHeads",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:25"
            },
            {
              "label": "sellHeads",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:26"
            },
            {
              "label": "openBuyOrders",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:27"
            },
            {
              "label": "openSellOrders",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:28"
            },
            {
              "label": "priceCumulative",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:29"
            },
            {
              "label": "lastPriceCumulative",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:30"
            },
            {
              "label": "totalPriceDataPoints",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:31"
            },
            {
              "label": "lastCumulativePriceUpdate",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:32"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:36"
            },
            {
              "label": "buyID",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:38"
            },
            {
              "label": "sellID",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:39"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:41"
            },
            {
              "label": "lastFundingRateCalculation",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:43"
            },
            {
              "label": "fundingInterval",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:45"
            },
            {
              "label": "fundingDivisor",
              "offset": 0,
              "slot": "19",
              "type": "t_int256",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:47"
            },
            {
              "label": "buys",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(BuyOrder)1768_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:49"
            },
            {
              "label": "sells",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(SellOrder)1783_storage)",
              "contract": "OrderBook",
              "src": "contracts/OrderBook/OrderBook.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1241": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4386": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BuyOrder)1768_storage)": {
              "label": "mapping(uint256 => struct OrderBook.BuyOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SellOrder)1783_storage)": {
              "label": "mapping(uint256 => struct OrderBook.SellOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(BuyOrder)1768_storage": {
              "label": "struct OrderBook.BuyOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(SellOrder)1783_storage": {
              "label": "struct OrderBook.SellOrder",
              "members": [
                {
                  "label": "Maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "TokenIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "Volume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "Next",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "Prev",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RateOracle": {
        "src": "contracts/RateOracle.sol:11",
        "version": {
          "withMetadata": "171728d2544319d16e436d4b6b5285127caa2d0c5aeef4281a754c2465176c6f",
          "withoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065",
          "linkedWithoutMetadata": "1da63028e1a1ca946d0813701bc8a09955a1e302a3968cbcdc9f13e562661065"
        },
        "inherit": [
          "BlockContext",
          "PerpFiOwnableUpgrade",
          "ContextUpgradeable",
          "Initializable",
          "IPriceFeed"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize()",
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "getAggregator(bytes32)",
          "setLatestData(bytes32,uint256,uint256,uint256)",
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getTwapPrice(bytes32,uint256)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            },
            {
              "label": "priceFeedMap",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:21"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:22"
            },
            {
              "label": "priceFeedDecimalMap",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "RateOracle",
              "src": "contracts/RateOracle.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
              "label": "mapping(bytes32 => contract AggregatorV3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpDynamic": {
        "src": "contracts/Vaults/FxPerpDynamic.sol:11",
        "version": {
          "withMetadata": "5bc9838d51afce0f5be8f68428e7d35c994e171624c53fbdf348ee8f31b6feac",
          "withoutMetadata": "945213c41a6f7e37539d4211172e6446191a5b6aec6135e507ef238f0ad7cfc3",
          "linkedWithoutMetadata": "945213c41a6f7e37539d4211172e6446191a5b6aec6135e507ef238f0ad7cfc3"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "updateDynamicMultiplier(uint256)",
          "portToStatic(uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxPerpDynamic",
            "src": "contracts/Vaults/FxPerpDynamic.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:15"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(FxPerpStatic)4803",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:17"
            },
            {
              "label": "DYNAMIC_BALANCE_MULTIPLIER",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:19"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "FxPerpDynamic",
              "src": "contracts/Vaults/FxPerpDynamic.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4803": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxPerpStatic": {
        "src": "contracts/Vaults/FxPerpStatic.sol:10",
        "version": {
          "withMetadata": "3675a9c09cd3145a7da2f572aa20c41f8e0a97b86d4e660f4bf362d5cbc19211",
          "withoutMetadata": "c9c0a81670b73f603878b907b7946674ee1932d5923151bb1ea5f7cabdf32456",
          "linkedWithoutMetadata": "c9c0a81670b73f603878b907b7946674ee1932d5923151bb1ea5f7cabdf32456"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "setDynamic(address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "portToDynamic(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxPerpStatic",
            "src": "contracts/Vaults/FxPerpStatic.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "vaults",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:12"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(FxPerpDynamic)4663",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:14"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "FxPerpStatic",
              "src": "contracts/Vaults/FxPerpStatic.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(FxPerpDynamic)4663": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxUSDVaults": {
        "src": "contracts/Vaults/FxUSDVaults.sol:8",
        "version": {
          "withMetadata": "46bb62e5579694fa4a5725c4a4b60b8e59e749c7d2e2733069907b271da6db39",
          "withoutMetadata": "821c06d9a6b3b9feb6c3477f73b31334a725b4dbc4cc9b2943f7225ac4d89ced",
          "linkedWithoutMetadata": "821c06d9a6b3b9feb6c3477f73b31334a725b4dbc4cc9b2943f7225ac4d89ced"
        },
        "inherit": [
          "FxVaults"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address[],bytes32[],address,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxUSDVaults",
            "src": "contracts/Vaults/FxUSDVaults.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:15"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:17"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:19"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:22"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:24"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:27"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:29"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "8",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:31"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(FxPerpDynamic)4663",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:33"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(RateOracle)4386",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:35"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(FxPerpStatic)4803",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:37"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_struct(Vault)5095_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:39"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5095_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4663": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4803": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4386": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5095_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FxVaults": {
        "src": "contracts/Vaults/FxVaults.sol:11",
        "version": {
          "withMetadata": "da60288f98d7ece02315f4ad9dc5e2fe254ad56dcecd7526686a9316daf63be4",
          "withoutMetadata": "17060264b9c42a6aa413ddecb7e8ab7979634c05ddab735a6ceba5d61f380e6d",
          "linkedWithoutMetadata": "17060264b9c42a6aa413ddecb7e8ab7979634c05ddab735a6ceba5d61f380e6d"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address[],bytes32[],address,uint256)",
          "setState(address,address,address)",
          "()",
          "openVault(uint256)",
          "getVault(uint256)",
          "supply(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "borrow(uint256,uint256)",
          "repay(uint256,uint256)",
          "closeVault(uint256)",
          "liquidate(uint256)",
          "addCollateralOption(address)",
          "updateDynamicMultiplier(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FxVaults",
            "src": "contracts/Vaults/FxVaults.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vaultID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:15"
            },
            {
              "label": "debtTokenIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:17"
            },
            {
              "label": "BONE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:19"
            },
            {
              "label": "MAX_DEBT_RATIO",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:20"
            },
            {
              "label": "DYNAMIC_DEBT_MULTIPLIER",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:22"
            },
            {
              "label": "collateralWhitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:24"
            },
            {
              "label": "priceFeedKeys",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:25"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:27"
            },
            {
              "label": "OrderBook",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:29"
            },
            {
              "label": "set",
              "offset": 20,
              "slot": "8",
              "type": "t_bool",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:31"
            },
            {
              "label": "perpDynamic",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(FxPerpDynamic)4663",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:33"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(RateOracle)4386",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:35"
            },
            {
              "label": "perpStatic",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(FxPerpStatic)4803",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:37"
            },
            {
              "label": "Vaults",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_struct(Vault)5095_storage)dyn_storage",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:39"
            },
            {
              "label": "isClosed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FxVaults",
              "src": "contracts/Vaults/FxVaults.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Vault)5095_storage)dyn_storage": {
              "label": "struct FxVaults.Vault[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FxPerpDynamic)4663": {
              "label": "contract FxPerpDynamic",
              "numberOfBytes": "20"
            },
            "t_contract(FxPerpStatic)4803": {
              "label": "contract FxPerpStatic",
              "numberOfBytes": "20"
            },
            "t_contract(RateOracle)4386": {
              "label": "contract RateOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Vault)5095_storage": {
              "label": "struct FxVaults.Vault",
              "members": [
                {
                  "label": "Owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "CollateralIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "Debt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DummyToken": {
        "src": "contracts/dummy/DummyToken.sol:5",
        "version": {
          "withMetadata": "571580aad6c74985226d3ccd3fda5792a3ea2d16357dc777a947729c6ac70300",
          "withoutMetadata": "e13a74082beb42631ca6bfdccb4ba8c786fb368df642959778639d2591ab8da8",
          "linkedWithoutMetadata": "e13a74082beb42631ca6bfdccb4ba8c786fb368df642959778639d2591ab8da8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BlockContext": {
        "src": "contracts/utils/BlockContext.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "__gap",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlockContext",
              "src": "contracts/utils/BlockContext.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/utils/Decimal.sol:7",
        "version": {
          "withMetadata": "45d37d90280d79483a21a54ea5074aaff02093c2f61263d1e3ff3064cbea1442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "DecimalMath",
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DecimalMath": {
        "src": "contracts/utils/DecimalMath.sol:8",
        "version": {
          "withMetadata": "1bb9903bcabe6b8986dfcc01af52c83b5d30da7a3cc360eeca91a5ecc4ffe996",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceFeed": {
        "src": "contracts/utils/IPriceFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(bytes32)",
          "getLatestTimestamp(bytes32)",
          "getPreviousPrice(bytes32,uint256)",
          "getPreviousTimestamp(bytes32,uint256)",
          "getTwapPrice(bytes32,uint256)",
          "setLatestData(bytes32,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PerpFiOwnableUpgrade": {
        "src": "contracts/utils/PerpFiOwnableUpgrade.sol:19",
        "version": {
          "withMetadata": "8f10351b5b39dbae41873d65ef9dcebad8d01e46625fd80eaedac8d50838294a",
          "withoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc",
          "linkedWithoutMetadata": "c454007bff16d9e1ab03c42b77c4c034ef978be631e0b185049cb79299c600dc"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "candidate()",
          "renounceOwnership()",
          "setOwner(address)",
          "updateOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:20"
            },
            {
              "label": "_candidate",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PerpFiOwnableUpgrade",
              "src": "contracts/utils/PerpFiOwnableUpgrade.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}